<div id="edit-fight-modal-<%= fight.id %>" class="modal-overlay" style="display:none;">
  <div class="modal-content">
    <span class="close-modal" onclick="document.getElementById('edit-fight-modal-<%= fight.id %>').style.display='none'">&times;</span>
    <h2 class="text-center mb-4">Edit Upcoming Fight</h2>
    <%= form_with(model: fight, url: fight_path(fight), method: :patch, local: true) do |f| %>
      <div class="form-group">
        <label class="form-label">Boxer 1</label>
        <input id="edit-boxer1-input-<%= fight.id %>" class="form-control awesomplete" type="text" autocomplete="off" placeholder="Type name to search for a boxer..." value="<%= fight.boxer_a.full_name %>" />
        <input type="hidden" id="edit-boxer1-id-<%= fight.id %>" name="fight[boxer_a_id]" value="<%= fight.boxer_a.id %>" />
      </div>
      <div class="form-group">
        <label class="form-label">Boxer 2</label>
        <input id="edit-boxer2-input-<%= fight.id %>" class="form-control awesomplete" type="text" autocomplete="off" placeholder="Type name to search for a boxer..." value="<%= fight.boxer_b.full_name %>" />
        <input type="hidden" id="edit-boxer2-id-<%= fight.id %>" name="fight[boxer_b_id]" value="<%= fight.boxer_b.id %>" />
      </div>
      <div class="form-group">
        <label>Date</label>
        <%= f.date_field :fight_date, class: 'form-control', value: fight.fight_date %>
      </div>
      <div class="form-group">
        <label class="form-label">Weight Class</label>
        <%= f.select :weight_class, Boxer::WEIGHT_CLASSES.map { |wc| [wc.titleize, wc] }, { selected: fight.weight_class }, name: 'fight[weight_class]', class: 'form-control' %>
      </div>
      <div class="form-group">
        <label class="form-label">Country</label>
        <%= f.select :country, ISO3166::Country.translations.values, { selected: fight.country }, class: 'form-control' %>
      </div>
      <div class="form-group">
        <label>City</label>
        <%= f.text_field :city, class: 'form-control', value: fight.city %>
      </div>
      <div class="form-group">
        <div class="form-check">
          <%= f.check_box :status, { class: 'form-check-input', id: "fight-status-#{fight.id}", onchange: "toggleFightResultFields(#{fight.id})" }, 'occurred', 'scheduled' %>
          <label class="form-check-label" for="fight-status-<%= fight.id %>">Fight has occurred</label>
        </div>
      </div>
      <div id="fight-result-fields-<%= fight.id %>" style="display: <%= fight.status == 'occurred' ? 'block' : 'none' %>">
        <div class="form-group">
          <label class="form-label">Result</label>
          <%= f.select :winner_id, 
              options_for_select([
                ['Draw', 'draw'],
                [fight.boxer_a.full_name, fight.boxer_a.id],
                [fight.boxer_b.full_name, fight.boxer_b.id]
              ], fight.winner_id || (fight.draw ? 'draw' : nil)),
              { include_blank: 'Select winner...', required: true },
              { class: 'form-control', id: "fight-winner-#{fight.id}", onchange: "toggleDrawField(#{fight.id}); handleDrawSelection(#{fight.id});" } %>
          <%= f.hidden_field :draw, id: "fight-draw-#{fight.id}" %>
        </div>
        <div class="form-group" id="method-field-<%= fight.id %>" style="display: <%= fight.winner_id.present? && !['draw', 'no_contest'].include?(fight.winner_id.to_s) ? 'block' : 'none' %>">
          <label class="form-label">Method</label>
          <%= f.select :method, 
              options_for_select([
                ['Knockout', 'knockout'],
                ['Decision', 'decision']
              ], fight.method),
              { include_blank: 'Select method...' },
              { class: 'form-control' } %>
        </div>
      </div>
      <div class="d-flex justify-content-between gap-2 mt-3">
        <div>
          <%= f.submit 'Save', class: 'btn btn-dark' %>
          <button type="button" class="btn btn-outline-dark" onclick="document.getElementById('edit-fight-modal-<%= fight.id %>').style.display='none'">Cancel</button>
        </div>
      </div>
    <% end %>
    <div class="d-flex justify-content-end mt-2">
      <%= button_to 'Delete Fight', fight_path(fight), method: :delete, class: 'btn btn-danger', data: { confirm: 'Are you sure you want to delete this fight?' } %>
    </div>
  </div>
  <style>
    .modal-overlay {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.18);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
    }
    .modal-content {
      background: #fff;
      border-radius: 16px;
      padding: 32px 28px 24px 28px;
      max-width: 500px;
      width: 100%;
      box-shadow: 0 4px 32px rgba(0,0,0,0.12);
      position: relative;
      max-height: 90vh;
      overflow-y: auto;
    }
    .close-modal {
      position: absolute;
      top: 18px;
      right: 22px;
      font-size: 2rem;
      cursor: pointer;
    }
    .form-group {
      margin-bottom: 16px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }
    .form-label {
      font-weight: 500;
      margin-bottom: 4px;
    }
    .form-control {
      width: 100%;
      border-radius: 6px;
      border: 1px solid #aaa;
      padding: 6px 10px;
      font-size: 1rem;
      box-sizing: border-box;
    }
    .awesomplete {
      width: 100%;
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.5/awesomplete.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/awesomplete/1.1.5/awesomplete.min.js"></script>
  <script>
    function setupBoxerAutocomplete(inputId, hiddenId) {
      var input = document.getElementById(inputId);
      var hidden = document.getElementById(hiddenId);
      var awesomplete = new Awesomplete(input, {
        minChars: 1,
        autoFirst: true,
        replace: function(suggestion) {
          this.input.value = suggestion.label;
        }
      });
      input.addEventListener("input", function() {
        var term = input.value;
        if (term.length < 1) return;
        fetch('/boxers/autocomplete?term=' + encodeURIComponent(term))
          .then(response => response.json())
          .then(data => {
            awesomplete.list = data.map(function(boxer) {
              return { label: boxer.name, value: boxer.id };
            });
          });
      });
      input.addEventListener("awesomplete-selectcomplete", function(evt) {
        hidden.value = awesomplete._list.find(x => x.label === input.value)?.value || '';
      });
      // Clear hidden if input is cleared
      input.addEventListener("blur", function() {
        if (!input.value) hidden.value = '';
      });
    }
    document.addEventListener("DOMContentLoaded", function() {
      setupBoxerAutocomplete('edit-boxer1-input-<%= fight.id %>', 'edit-boxer1-id-<%= fight.id %>');
      setupBoxerAutocomplete('edit-boxer2-input-<%= fight.id %>', 'edit-boxer2-id-<%= fight.id %>');
    });

    function toggleFightResultFields(fightId) {
      const checkbox = document.getElementById(`fight-status-${fightId}`);
      const resultFields = document.getElementById(`fight-result-fields-${fightId}`);
      resultFields.style.display = checkbox.checked ? 'block' : 'none';
      
      if (!checkbox.checked) {
        // Reset fields when unchecked
        document.getElementById(`fight-winner-${fightId}`).value = '';
        document.getElementById(`method-field-${fightId}`).style.display = 'none';
      }
    }

    function toggleDrawField(fightId) {
      const winnerSelect = document.getElementById(`fight-winner-${fightId}`);
      const methodField = document.getElementById(`method-field-${fightId}`);
      
      if (['draw', 'no_contest'].includes(winnerSelect.value)) {
        methodField.style.display = 'none';
      } else if (winnerSelect.value) {
        methodField.style.display = 'block';
      } else {
        methodField.style.display = 'none';
      }
    }

    function handleDrawSelection(fightId) {
      const winnerSelect = document.getElementById(`fight-winner-${fightId}`);
      const drawField = document.getElementById(`fight-draw-${fightId}`);
      if (winnerSelect.value === 'draw') {
        drawField.value = true;
      } else {
        drawField.value = false;
      }
    }

    document.addEventListener("DOMContentLoaded", function() {
      const form = document.querySelector(`#edit-fight-modal-${fight.id} form`);
      form.addEventListener('submit', function(e) {
        const winnerSelect = document.getElementById(`fight-winner-${fight.id}`);
        if (!winnerSelect.value) {
          alert('Please choose a winner or select Draw');
          e.preventDefault();
        }
      });
    });
  </script>
</div> 